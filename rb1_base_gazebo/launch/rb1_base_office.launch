<?xml version="1.0"?>
<launch>

  <!-- roslaunch arguments -->
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>

  <!-- summit_xl_control launch file -->
  <include file="$(find rb1_base_control)/launch/rb1_base_control.launch" />

  
  <!-- rb1_base_robot_control launch file -->
  <!-- rb1_base_robot_control will provide control for the PTZ and the height of the robot -->
  <!-- include file="$(find rb1_base_robot_control)/launch/rb1_base_robot_control.launch" / -->
  
  <!-- rb1_base_joy launch file -->
  <!-- Include this file only if you wish a the control the robot via joystick, it has to be commented if you want to set goals for autonomous navigation -->
  <!-- for this node to work correctly first you need to succesfully connect the ps3 joystick with:
		sudo su
		rosrun ps3joy sixpair
		rosrun ps3joy ps3joy.py
  -->
  <include file="$(find rb1_base_joystick)/launch/rb1_base_joy.launch" />

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rb1_base_gazebo)/worlds/rb1_base_office.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="false"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
         command="$(find xacro)/xacro.py '$(find rb1_base_description)/robots/rb1_base_platform.urdf.xacro'" />
         
  <!-- Call a python script to the run a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model rb1_base -param robot_description"/>

</launch>
