joint_read_state_controller:
  type: joint_state_controller/JointStateController 
  publish_rate: 50.0

#rb1_base:
joint_left_velocity_controller:
  type: velocity_controllers/JointVelocityController
#  type: effort_controllers/JointPositionController
  joint: joint_left_wheel
  pid: {p: 200.0, i: 0.01, d: 10.0}

joint_right_velocity_controller:
  type: velocity_controllers/JointVelocityController
#  type: effort_controllers/JointPositionController
  joint: joint_right_wheel
  pid: {p: 200.0, i: 0.01, d: 10.0}

#rb1_torso:
torso_slider_controller:
  type: position_controllers/JointPositionController    
  joint: torso_slider_joint
  pid: {p: 1000.0, i: 1.0, d: 200.0}

head_pan_controller:
  type: position_controllers/JointPositionController
  joint: head_pan_joint
  pid: {p: 100.0, i: 0.01, d: 50.0}

head_tilt_controller:
  type: position_controllers/JointPositionController
  joint: head_tilt_joint
  pid: {p: 100.0, i: 0.01, d: 50.0}

#rb1_arm:
# Jaco/Mico Arm  
arm_j1_position_controller:
  type: position_controllers/JointPositionController
  joint: arm_joint_1
  pid: {p: 5000.0, i: 0.0, d: 0.0, i_clamp: 0.0}

arm_j2_position_controller:
  type: position_controllers/JointPositionController
  joint: arm_joint_2
  pid: {p: 5000.0, i: 0.0, d: 0.0, i_clamp: 10.0}

arm_j3_position_controller:
  type: position_controllers/JointPositionController
  joint: arm_joint_3
  pid: {p: 5000.0, i: 0.0, d: 0.0, i_clamp: 10.0}

arm_j4_position_controller:
  type: position_controllers/JointPositionController
  joint: arm_joint_4
  pid: {p: 500.0, i: 0.0, d: 0.0, i_clamp: 10.0 }

arm_j5_position_controller:
  type: position_controllers/JointPositionController
  joint: arm_joint_5
  pid: {p: 200.0, i: 0.0, d: 10.0, i_clamp: 10.0 }

arm_j6_position_controller:
  type: position_controllers/JointPositionController
  joint: arm_joint_6
  pid: {p: 500.0, i: 10, d: 5.0, i_clamp: 5.0 }

finger_j1_position_controller:
  type: position_controllers/JointPositionController
  joint: arm_joint_finger_1
  pid: {p: 10.0, i: 0.0, d: 10.0}
  
finger_j2_position_controller:
  type: position_controllers/JointPositionController
  joint: arm_joint_finger_2
  pid: {p: 10.0, i: 0.0, d: 10.0}

finger_j3_position_controller:
  type: position_controllers/JointPositionController
  joint: arm_joint_finger_3
  pid: {p: 10.0, i: 0.0, d: 10.0}
  
mobile_base_controller:
  type        : "diff_drive_controller/DiffDriveController"
  left_wheel  : 'left_wheel_joint'
  right_wheel : 'right_wheel_joint'
  publish_rate: 50.0               # default: 50
  pose_covariance_diagonal : [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
  twist_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]

  # Wheel separation and diameter. These are both optional.
  # diff_drive_controller will attempt to read either one or both from the
  # URDF if not specified as a parameter
  wheel_separation : 0.433
  wheel_radius : 0.0762
  
  # Wheel separation and radius multipliers
  wheel_separation_multiplier: 1.0 # default: 1.0
  wheel_radius_multiplier    : 1.0 # default: 1.0

  # Velocity commands timeout [s], default 0.5
  cmd_vel_timeout: 0.25

  # Base frame_id
  base_frame_id: base_footprint #default: base_link

  # Velocity and acceleration limits
  # Whenever a min_* is unspecified, default to -max_*
  linear:
    x:
      has_position_limits    : true
      max_velocity           : 1.75  # m/s
      min_velocity           : -1.75 # m/s
      has_acceleration_limits: true
      max_acceleration       : 1.75  # m/s^2
      min_acceleration       : -1.75 # m/s^2
  angular:
    z:
      has_position_limits    : true
      max_velocity           : 3.0  # rad/s
      has_acceleration_limits: true
      max_acceleration       : 3.0  # rad/s^2


arm_controller:
  type: "position_controllers/JointTrajectoryController"
  joints:
    - arm_joint_1
    - arm_joint_2
    - arm_joint_3
    - arm_joint_4
    - arm_joint_5
    - arm_joint_6

  gains: # Required because we're controlling an position interface

    arm_joint_1: {p: 5000, d: 0, i: 0, i_clamp: 10}
    arm_joint_2: {p: 5000, d: 0, i: 0, i_clamp: 10}
    arm_joint_3: {p: 5000, d: 0, i: 0, i_clamp: 10}
    arm_joint_4: {p: 500, d: 0, i: 0, i_clamp: 10}
    arm_joint_5: {p: 200, d: 5, i: 0, i_clamp: 10}
    arm_joint_6: {p: 500, d: 0, i: 0, i_clamp: 10}


gripper_controller:
  # Unfortunately this controller type works only for grippers with a single joint :( 
  #type: "position_controllers/GripperActionController"
  type: "position_controllers/JointTrajectoryController"
  joints:
    - arm_joint_finger_1
    - arm_joint_finger_2
    - arm_joint_finger_3
  
  gains:
  
    arm_joint_finger_1: {p: 10.0, d: 0, i: 0, i_clamp: 10.0}
    arm_joint_finger_2: {p: 10.0, d: 0, i: 0, i_clamp: 10.0}
    arm_joint_finger_3: {p: 10.0, d: 0, i: 0, i_clamp: 10.0}

#gazebo_ros_control:
#  pid_gains:
#    arm_joint_1: {d: 0, i: 5, i_clamp: 5}
#    arm_joint_2: {d: 0, i: 20, i_clamp: 20}
#    arm_joint_3: {d: 0, i: 20, i_clamp: 20}
#    arm_joint_4: {d: 0, i: 10, i_clamp: 10}
#    arm_joint_5: {d: 5, i: 10, i_clamp: 10}
#    arm_joint_6: {d: 0, i: 5, i_clamp: 5}
#    
